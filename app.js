var createError = require('http-errors');
var express = require('express');
var path = require('path');
var cookieParser = require('cookie-parser');
var logger = require('morgan');
var session = require('express-session')
const cors = require('cors'); 



//routers
var indexRouter = require('./routes/index');
var userRouter = require('./routes/user'); 
const stockRouter = require('./routes/stock');
const authRouter = require('./routes/auth');
const v1 = require('./routes/tokenv1');



var flash = require('connect-flash')
const passport = require('passport');
require('dotenv').config() 



var sequelize = require('./models').sequelize; //index.js can be omitted. 
var passportConfig = require('./passport'); // passport/index.js
var app = express(); //express assigend 
sequelize.sync();
passportConfig(passport) //Passing a moudle as a variable? 


app.use(cors({
  origin: true,
  credentials: true,
}))
// view engine setup
app.set('views', path.join(__dirname, 'views'));
app.set('view engine', 'pug');
app.set('port', process.env.PORT || 3333);


app.use(logger('dev'));
app.use(express.static(path.join(__dirname, 'public')));
app.use('/img', express.static(path.join(__dirname, 'uploads'))); //to be deleted later
app.use(express.json()) //where do I use this? when? why executge here?? 
app.use(express.urlencoded({ extended: false }));
app.use(cookieParser(process.env.COOKIE_SECRET));

app.use(session({
  resave: false, 
  saveUninitialized: false,  //이게 관련이 있을지도?
  secret: process.env.COOKIE_SECRET,
  cookie: {
    httpOnly: true,
    secure: false
  }
}));
app.use(passport.initialize()) // store passport config into "req"
app.use(passport.session()) //store  passport info into "req.session"
//req.session is generated by express-session

app.use(flash())


app.use('/', indexRouter); 
//redirecting method는 자동으로 get인가?
app.use('/user', userRouter);
app.use('/auth', authRouter);
app.use('/stock', stockRouter);

app.use('/v1', v1); 




app.use(function(req, res, next) {
  next(createError(404));
} ); 


// error handler
app.use(function(err, req, res, next) {
  // set locals, only providing error in development
  res.locals.message = err.message;
  res.locals.error = req.app.get('env') === 'development' ? err : {};

  // render the error page
  res.status(err.status || 500);
  res.render('error');
});

app.listen(app.get('port'), () => {
  console.log(app.get('port'), 'port been used');
});


module.exports = app; 
